@page "/user-register"
@rendermode InteractiveServer
@using Web.Model
@using Web.Services.Interfaces

<div class="container">
    <h1>Cadastro Usuario</h1>
    <form method="post" @onsubmit="Submit" @formname="user-register">
        <div class="field-compound">
            <div class="field">
                <label for="name">Nome</label>
                <input type="text" id="name" name="name" placeholder="Nome" @bind-value="Model.Name">
            </div>
            <div class="field">
                <label for="lastName">Sobrenome</label>
                <input type="text" id="lastName" name="lastName" placeholder="Sobrenome" @bind-value="Model.LastName">
            </div>
        </div>
        <div class="field-compound">
            <div class="field">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" placeholder="Email" @bind-value="Model.Email">
            </div>
            <div class="field">
                <label for="phone">Telefone</label>
                <input type="tel" id="phone" name="phone" placeholder="Telefone de contato" @bind-value="Model.Phone">
            </div>
        </div>

        <div class="field-compound">
            <div class="field">
                <label for="cpf">CPF</label>
                <input type="text" id="cpf" name="cpf" placeholder="CPF" @bind-value="Model.Cpf">
            </div>
            <div class="field">
                <label for="dateofbirth">Data Nascimento</label>
                <input type="date" id="dateofbirth" @bind-value="Model.BirthDate" name="dateofbirth" placeholder="Data Nascimento">
            </div>
        </div>

        <div class="field-compound">
            <div class="field">
                <label for="gender">Sexo</label>
                <select class="form-select" @onchange="@OnSelectGender">
                    <option value="" disabled>-- Selecione o Sexo --</option>
                    @foreach (var gender in Genders)
                    {
                        <option value="@gender.Value">@gender.Text</option>
                    }
                </select>
            </div>
            <div class="field">
                <label for="profileAccess">Perfil do usuário</label>
                <select class="form-select" @onchange="@OnSelectProfileAccess">
                    <option value="" disabled>-- Selecione o tipo acesso --</option>
                    @foreach (var option in ProfileAccessOptions)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </div>
        </div>
        <div class="field-compound">
            <div class="field">
                <label for="user">Usuário</label>
                <input type="text" id="user" name="user" placeholder="Usuário" @bind-value="Model.User">
            </div>
            <div class="field">
                <label for="team">Equipe do usuário</label>
                <select class="form-select" @onchange="@OnSelectTeam">
                    <option value="" disabled>-- Selecione o equipe --</option>
                    @foreach (var option in TeamOptions)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </div>
        </div>
        <button type="submit">Criar</button>
    </form>
</div>


@code {
    private IReadOnlyList<Gender> Genders = Gender.GetGenders;
    private IReadOnlyList<ProfileAccess> ProfileAccessOptions = ProfileAccess.GetProfileAccess;
    private IReadOnlyList<Team> TeamOptions = Team.GetTeams;

    [SupplyParameterFromForm]
    private UserModel Model { get; set; }

    [Inject]
    private IUserService _userService { get; set; }

    protected override void OnInitialized()
    {
        Model ??= new();
    }

    private Task Submit()
    {
        return _userService.AddUserAsync(Model);
    }

    #region Events Select
    void OnSelectTeam(ChangeEventArgs e)
    {
        Model.Team = int.Parse(e.Value.ToString());
    }

    void OnSelectGender(ChangeEventArgs e)
    {
        Model.Gender = (int)Gender.GetByValue(e.Value.ToString()).Value;
    }

    void OnSelectProfileAccess(ChangeEventArgs e)
    {
        Model.ProfileAccess = (int)ProfileAccess.GetByValue(e.Value.ToString()).Value;
    }
    #endregion
}
