@page "/"
@using Web.Model
@using Web.Services.Interfaces
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Listas dos Leads</title>
</head>
<body>
    <h1>Listas dos Leads</h1>

    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>Nome Cliente</th>
                    <th>Placa</th>
                    <th>Modelo Veículo</th>
                    <th>Ano Modelo</th>
                    <th>Tipo de Lead</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @if (Leads?.Any() == false)
                {
                    <tr>
                        <td colspan="6" style="text-align: center; padding: 20px; font-style: italic; color: #999;">Nenhum lead encontrado.</td>
                    </tr>
                }

                @foreach (var lead in Leads)
                {
                    var buttonClass = lead.Status == 1
                    ? "status-pendente"
                    : lead.Status == 2
                    ? "status-nao-vendido"
                    : "status-outro";

                    <tr>
                        <td>@lead.FullName</td>
                        <td>@lead.Vehicle.Plate</td>
                        <td>@lead.Vehicle.Model</td>
                        <td>@lead.Vehicle.ModelYear</td>
                        <td>@lead.InsuranceType</td>
                        <td>
                            <button class="status-button @buttonClass">
                                @lead.Status
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</body>
</html>


@code {
    private IReadOnlyList<LeadsModel> Leads = [];

    [Inject]
    private ILeadsService _service { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CancellationToken cancellationToken = new();

        var result = await _service.GetLeads(cancellationToken);

        if (result.IsFailure)
        {
            return;
        }

        Leads = result.Value;
    }
}
