@page "/lead/detalhes/{LeadId:int}"

@using CSharpFunctionalExtensions
@using Web.Model
@using Web.Services.Interfaces

<div class="lead-details">

    @if (LeadDetail != null)
    {
        <div class="lead-card">
            <div class="lead-info">
                <div class="personal-info">
                    <img src="/images/person/media-homem.jpeg" alt="@LeadDetail.Name" class="profile-image" />
                    <p><strong>Nome:</strong> @LeadDetail.Name</p>
                    <p><strong>Email:</strong> @LeadDetail.Email</p>
                    <p><strong>Telefone:</strong> @LeadDetail.Phone</p>
                    <p><strong>Data de Nascimento:</strong> @LeadDetail.BirthDate</p>
                    <p><strong>Genero:</strong> @LeadDetail.Gender</p>
                    <div class="vehicle-info">
                        <h5>Informações do Veículo</h5>
                        <p><strong>Modelo:</strong> @LeadDetail.Vehicle.Model</p>
                        <p><strong>Placa:</strong> @LeadDetail.Vehicle.Plate</p>
                        <p><strong>Ano:</strong> @LeadDetail.Vehicle.Year</p>
                    </div>
                    <div class="address-info">
                        <h5>Informações da residencia</h5>
                        <p><strong>Rua:</strong> @LeadDetail.Address.Street</p>
                        <p><strong>Bairro:</strong> @LeadDetail.Address.Neighborhood</p>
                        <p><strong>Numéro:</strong> @LeadDetail.Address.Number</p>
                        <p><strong>Estado:</strong> @LeadDetail.Address.State</p>
                        <p><strong>Cep:</strong> @LeadDetail.Address.ZipCode</p>
                    </div>
                </div>
                
            </div>
        </div>

        <div class="vehicle-info">
            <h3>Informações do Veículo</h3>
            <p><strong>Modelo:</strong> @LeadDetail.Vehicle.Model</p>
            <p><strong>Placa:</strong> @LeadDetail.Vehicle.Plate</p>
            <p><strong>Ano:</strong> @LeadDetail.Vehicle.Year</p>
        </div>
        <div class="address-info"></div>
        <div class="address-info"></div>

        <div class="address-info">
            <h3>Informações da residencia</h3>
            <p><strong>Rua:</strong> @LeadDetail.Address.Street</p>
            <p><strong>Bairro:</strong> @LeadDetail.Address.Neighborhood</p>
            <p><strong>Numéro:</strong> @LeadDetail.Address.Number</p>
            <p><strong>Estado:</strong> @LeadDetail.Address.State</p>
            <p><strong>Cep:</strong> @LeadDetail.Address.ZipCode</p>
        </div>
    }
    else
    {
        <p>Carregando detalhes do lead...</p>
    }
</div>

@code {
    [Parameter] public int LeadId { get; set; }
    private Lead LeadDetail { get; set; } = new();

    [Inject]
    private ILeadsService _leadsService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CancellationToken cancellationToken = new();
        Result<LeadsModel> result = await _leadsService.GetLeadById(LeadId, cancellationToken);

        if (result.IsFailure)
        {
            return;
        }

        LeadDetail = new()
        {
            Id = result.Value.Id,
            Name = result.Value.FullName,
            Email = result.Value.Email,
            Phone = result.Value.Phone,
            BirthDate = result.Value.BirthDate,
            Vehicle = new()
            {
                Model = result.Value.Vehicle.Model,
                Plate = result.Value.Vehicle.Plate,
                Year = result.Value.Vehicle.ModelYear
            },
            Address = new()
            {
                    Street = result.Value.Address.Streets,
                    Neighborhood = result.Value.Address.Neighborhoods,
                    State = result.Value.Address.States,
                    ZipCode = result.Value.Address.ZipCodes,
                    Number = result.Value.Address.Numbers
            }
        };
    }

    public class Lead
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Email { get; set; }
        public string Phone { get; set; }
        public string Gender { get; set; }
        public string BirthDate { get; set; }
        public Vehicle Vehicle { get; set; } = new();
        public Address Address { get; set; } = new();
    }

    public class Vehicle
    {
        public string Model { get; set; }
        public string Plate { get; set; }
        public string Year { get; set; }
    }

    public class Address
    {
        public string Street { get; set; }
        public string Neighborhood { get; set; }
        public string State { get; set; }
        public string ZipCode { get; set; }
        public string Number { get; set; }
    }
}